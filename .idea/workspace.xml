<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="09a86893-fce4-4baa-b732-abd4a92151d7" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1VZfHeH2cKXZpO5m0Yav2Q3ybeO" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/venv2/lib/python3.7" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/venv2/lib/python3.7" />
      <recent name="$PROJECT_DIR$/venv2/bin" />
      <recent name="$PROJECT_DIR$/venv2/lib64/python3.7" />
      <recent name="$PROJECT_DIR$/venv2/lib64" />
      <recent name="$PROJECT_DIR$/venv2/lib/python3.7/" />
    </key>
  </component>
  <component name="RunManager" selected="Python.scraping_training_data">
    <configuration name="MyArticle" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Political_Sentiment_Analysis" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/MyArticle.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="parsing_allsides_html" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Political_Sentiment_Analysis" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/parsing_allsides_html.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="scraping_training_data" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Political_Sentiment_Analysis" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scraping_training_data.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="text_analysis_functions" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Political_Sentiment_Analysis" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="$PROJECT_DIR$/venv2/bin/python" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/text_analysis_functions.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.scraping_training_data" />
        <item itemvalue="Python.MyArticle" />
        <item itemvalue="Python.text_analysis_functions" />
        <item itemvalue="Python.parsing_allsides_html" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="09a86893-fce4-4baa-b732-abd4a92151d7" name="Default Changelist" comment="" />
      <changelist id="d1cd8e71-8855-4dd7-a072-a374b928b53a" name="now getting sentiment &amp; entity values/info from google cloud nlp" comment="" />
      <created>1577465452140</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1577465452140</updated>
    </task>
    <task id="LOCAL-00001" summary="minor dependency changes&#10;&#10;changed article parsing api from boilerpy3 to newspaper&#10;&#10;next steps:&#10;1. source necessary political sentiment data&#10;2. organize that shid&#10;3. create infrastructure to use google nlp sent analysis (fairly straightforward once data structures are determined">
      <created>1578860078836</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1578860078837</updated>
    </task>
    <task id="LOCAL-00002" summary="scraped &amp; parsed all of the allsides data into sources.pkl&#10;must use pickle to unpack it into a massive dictionary (~600 sources)&#10;next steps:&#10;1. scrape/grab all of the words and their hierarchies (bad time probably)&#10;2. determine subjects of sentences with google nlp&#10;3. sentiment score towards subjects&#10;4. combine that with the leaning of phrases to create rough bias&#10;&#10;possible routes after this is all done:&#10;1. refine the bias metric, something more intuitive/mathematically grounded&#10;2. somehow include omission bias (sounds like a bad time but there might be a cool way to do this without wanting 2 die)">
      <created>1578958322745</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1578958322745</updated>
    </task>
    <task id="LOCAL-00003" summary="scraped &amp; parsed all of the allsides data into sources.pkl&#10;must use pickle to unpack it into a massive dictionary (~600 sources)&#10;next steps:&#10;1. scrape/grab all of the words and their hierarchies (bad time probably)&#10;2. determine subjects of sentences with google nlp&#10;3. sentiment score towards subjects&#10;4. combine that with the leaning of phrases to create rough bias&#10;&#10;possible routes after this is all done:&#10;1. refine the bias metric, something more intuitive/mathematically grounded&#10;2. somehow include omission bias (sounds like a bad time but there might be a cool way to do this without wanting 2 die)">
      <created>1580233040827</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1580233040827</updated>
    </task>
    <task id="LOCAL-00004" summary="now getting sentiment &amp; entity values/info from google cloud nlp&#10;&#10;still need to classify, i should stop putting this off but it really seems like a bad time&#10;&#10;omission bias ideas;&#10;1) Use salience score to determine how important certain topics are in other articles.&#10;2) basic idea: (omitted_salience)*(-1)*(average impact on bias to other articles?)&#10;3) somehow incorporate magnitude but not sure exactly how since the value is mega arbitrary and means literally zilch to me&#10;&#10;fixed local google credential path error">
      <created>1584648390293</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1584648390293</updated>
    </task>
    <task id="LOCAL-00005" summary="now getting sentiment &amp; entity values/info from google cloud nlp&#10;&#10;still need to classify, i should stop putting this off but it really seems like a bad time&#10;&#10;omission bias ideas;&#10;1) Use salience score to determine how important certain topics are in other articles.&#10;2) basic idea: (omitted_salience)*(-1)*(average impact on bias to other articles?)&#10;3) somehow incorporate magnitude but not sure exactly how since the value is mega arbitrary and means literally zilch to me&#10;&#10;fixed local google credential path error">
      <created>1590090731848</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1590090731848</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ORDER">
      <list>
        <option value="0" />
        <option value="2" />
        <option value="3" />
        <option value="1" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="SHOW_ONLY_AFFECTED_CHANGES" value="true" />
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="HEAD" />
                      </list>
                    </value>
                  </entry>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="OPEN_GENERIC_TABS">
      <map>
        <entry key="1" value="TOOL_WINDOW" />
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="minor dependency changes&#10;&#10;changed article parsing api from boilerpy3 to newspaper&#10;&#10;next steps:&#10;1. source necessary political sentiment data&#10;2. organize that shid&#10;3. create infrastructure to use google nlp sent analysis (fairly straightforward once data structures are determined" />
    <MESSAGE value="scraped &amp; parsed all of the allsides data into sources.pkl&#10;must use pickle to unpack it into a massive dictionary (~600 sources)&#10;next steps:&#10;1. scrape/grab all of the words and their hierarchies (bad time probably)&#10;2. determine subjects of sentences with google nlp&#10;3. sentiment score towards subjects&#10;4. combine that with the leaning of phrases to create rough bias&#10;&#10;possible routes after this is all done:&#10;1. refine the bias metric, something more intuitive/mathematically grounded&#10;2. somehow include omission bias (sounds like a bad time but there might be a cool way to do this without wanting 2 die)" />
    <MESSAGE value="now getting sentiment &amp; entity values/info from google cloud nlp&#10;&#10;still need to classify, i should stop putting this off but it really seems like a bad time&#10;&#10;omission bias ideas;&#10;1) Use salience score to determine how important certain topics are in other articles.&#10;2) basic idea: (omitted_salience)*(-1)*(average impact on bias to other articles?)&#10;3) somehow incorporate magnitude but not sure exactly how since the value is mega arbitrary and means literally zilch to me" />
    <MESSAGE value="now getting sentiment &amp; entity values/info from google cloud nlp&#10;&#10;still need to classify, i should stop putting this off but it really seems like a bad time&#10;&#10;omission bias ideas;&#10;1) Use salience score to determine how important certain topics are in other articles.&#10;2) basic idea: (omitted_salience)*(-1)*(average impact on bias to other articles?)&#10;3) somehow incorporate magnitude but not sure exactly how since the value is mega arbitrary and means literally zilch to me&#10;&#10;fixed local google credential path error" />
    <option name="LAST_COMMIT_MESSAGE" value="now getting sentiment &amp; entity values/info from google cloud nlp&#10;&#10;still need to classify, i should stop putting this off but it really seems like a bad time&#10;&#10;omission bias ideas;&#10;1) Use salience score to determine how important certain topics are in other articles.&#10;2) basic idea: (omitted_salience)*(-1)*(average impact on bias to other articles?)&#10;3) somehow incorporate magnitude but not sure exactly how since the value is mega arbitrary and means literally zilch to me&#10;&#10;fixed local google credential path error" />
  </component>
  <component name="WindowStateProjectService">
    <state x="1548" y="754" width="800" height="677" key="#Notifications" timestamp="1584297012886">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state x="1548" y="754" width="800" height="677" key="#Notifications/67.27.3773.2133@67.27.3773.2133" timestamp="1584297012886" />
    <state x="1691" y="964" width="515" height="257" key="#com.intellij.ide.actions.ChooseComponentsToExportDialog" timestamp="1584298361075">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state x="1691" y="964" width="515" height="257" key="#com.intellij.ide.actions.ChooseComponentsToExportDialog/67.27.3773.2133@67.27.3773.2133" timestamp="1584298361075" />
    <state x="1622" y="687" width="652" height="811" key="#text_analysis_functions" timestamp="1584647651239">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state x="1622" y="687" width="652" height="811" key="#text_analysis_functions/67.27.3773.2133@67.27.3773.2133" timestamp="1584647651239" />
    <state x="358" y="27" width="912" height="915" key="CommitChangelistDialog2" timestamp="1590090729488">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state x="358" y="27" width="912" height="915" key="CommitChangelistDialog2/0.27.1920.1173@0.27.1920.1173" timestamp="1590090729488" />
    <state x="771" y="27" key="CommitChangelistDialog2/67.27.3773.2133@67.27.3773.2133" timestamp="1584648389339" />
    <state x="1517" y="663" width="501" height="484" key="FileChooserDialogImpl" timestamp="1584646850760">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state x="1517" y="663" width="501" height="484" key="FileChooserDialogImpl/67.27.3773.2133@67.27.3773.2133" timestamp="1584646850760" />
    <state width="1874" height="259" key="GridCell.Tab.0.bottom" timestamp="1590089747377">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state width="1874" height="259" key="GridCell.Tab.0.bottom/0.27.1920.1173@0.27.1920.1173" timestamp="1590089747377" />
    <state width="1863" height="611" key="GridCell.Tab.0.bottom/67.27.3773.2133@67.27.3773.2133" timestamp="1584648459086" />
    <state width="1874" height="259" key="GridCell.Tab.0.center" timestamp="1590089747375">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state width="1874" height="259" key="GridCell.Tab.0.center/0.27.1920.1173@0.27.1920.1173" timestamp="1590089747375" />
    <state width="1863" height="611" key="GridCell.Tab.0.center/67.27.3773.2133@67.27.3773.2133" timestamp="1584648459086" />
    <state width="1874" height="259" key="GridCell.Tab.0.left" timestamp="1590089747374">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state width="1874" height="259" key="GridCell.Tab.0.left/0.27.1920.1173@0.27.1920.1173" timestamp="1590089747374" />
    <state width="1863" height="611" key="GridCell.Tab.0.left/67.27.3773.2133@67.27.3773.2133" timestamp="1584648459086" />
    <state width="1874" height="259" key="GridCell.Tab.0.right" timestamp="1590089747377">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state width="1874" height="259" key="GridCell.Tab.0.right/0.27.1920.1173@0.27.1920.1173" timestamp="1590089747377" />
    <state width="1863" height="611" key="GridCell.Tab.0.right/67.27.3773.2133@67.27.3773.2133" timestamp="1584648459086" />
    <state width="1863" height="750" key="GridCell.Tab.1.bottom" timestamp="1584298753145">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state width="1863" height="750" key="GridCell.Tab.1.bottom/67.27.3773.2133@67.27.3773.2133" timestamp="1584298753145" />
    <state width="1863" height="750" key="GridCell.Tab.1.center" timestamp="1584298753144">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state width="1863" height="750" key="GridCell.Tab.1.center/67.27.3773.2133@67.27.3773.2133" timestamp="1584298753144" />
    <state width="1863" height="750" key="GridCell.Tab.1.left" timestamp="1584298753144">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state width="1863" height="750" key="GridCell.Tab.1.left/67.27.3773.2133@67.27.3773.2133" timestamp="1584298753144" />
    <state width="1863" height="750" key="GridCell.Tab.1.right" timestamp="1584298753145">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state width="1863" height="750" key="GridCell.Tab.1.right/67.27.3773.2133@67.27.3773.2133" timestamp="1584298753145" />
    <state x="528" y="322" width="910" height="737" key="SettingsEditor" timestamp="1590084461145">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state x="528" y="322" width="910" height="737" key="SettingsEditor/0.27.1920.1173@0.27.1920.1173" timestamp="1590084461145" />
    <state x="1104" y="563" width="1639" height="730" key="SettingsEditor/67.27.3773.2133@67.27.3773.2133" timestamp="1584647446046" />
    <state x="1797" y="1001" width="303" height="182" key="VCS.ChangelistChooser" timestamp="1584648448426">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state x="1797" y="1001" width="303" height="182" key="VCS.ChangelistChooser/67.27.3773.2133@67.27.3773.2133" timestamp="1584648448426" />
    <state x="555" y="345" width="517" height="299" key="Vcs.Push.Dialog.v2" timestamp="1590090750152">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state x="555" y="345" width="517" height="299" key="Vcs.Push.Dialog.v2/0.27.1920.1173@0.27.1920.1173" timestamp="1590090750152" />
    <state x="1158" y="605" key="Vcs.Push.Dialog.v2/67.27.3773.2133@67.27.3773.2133" timestamp="1584670352631" />
    <state x="1278" y="778" key="com.intellij.ide.util.TipDialog" timestamp="1584646796010">
      <screen x="67" y="27" width="3773" height="2133" />
    </state>
    <state x="584" y="389" width="741" height="456" key="git4idea.merge.GitPullDialog" timestamp="1590089009535">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state x="584" y="389" width="741" height="456" key="git4idea.merge.GitPullDialog/0.27.1920.1173@0.27.1920.1173" timestamp="1590089009535" />
    <state x="623" y="289" width="672" height="678" key="search.everywhere.popup" timestamp="1590085512268">
      <screen x="0" y="27" width="1920" height="1173" />
    </state>
    <state x="623" y="289" width="672" height="678" key="search.everywhere.popup/0.27.1920.1173@0.27.1920.1173" timestamp="1590085512268" />
  </component>
</project>